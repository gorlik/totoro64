SYMBOLS {
    __STACKSIZE__: type = weak, value = $0800; # 2k stack
    __HIMEM__:     type = weak, value = $5B00;
}
MEMORY {
    ZP:       file = "", define = yes, start = $0002,           size = $001A;
    ZP2:      file = "", define = yes, start = $00f7,           size = $0008;
#16k catridge data.
    ROM:      file = %O, define = yes, start = $8000, size = $4000, fill = yes, fillval = $ff;
#Usable RAM for data.
    RAM:      file = "", define = yes, start = $0800, size = $3800, type = rw;
#Data at $C000.  Not normally used but made available to your cartridge.
#Top 2k is for the stack.
#    HIRAM:    start = $C000, size = $1000-__STACKSIZE__, type = rw;
}
SEGMENTS {
    ZEROPAGE: load = ZP,      type = zp;
    ZP_2:     load = ZP2,     type = zp;
    STARTUP:  load = ROM,     type = ro;
    LOWCODE:  load = ROM,     type = ro,  optional = yes;
    CODE:     load = ROM,     type = ro;
    RODATA:   load = ROM,     type = ro;
    DATA:     load = ROM,     run = RAM, type = rw, define = yes;
    INIT:     load = ROM,     type = ro, define = yes, optional = yes;
#    ONCE:     load = ROM,     type = ro,  define   = yes;
    BSS:      load = RAM,     type = bss, define   = yes;
#Data stored at $C000.
#    BSSHI:	load = HIRAM, type = bss, define = yes, optional = yes;
}

#FEATURES {
#    CONDES: type    = constructor,
#            label   = __CONSTRUCTOR_TABLE__,
#            count   = __CONSTRUCTOR_COUNT__,
#            segment = ONCE;
#    CONDES: type    = destructor,
#            label   = __DESTRUCTOR_TABLE__,
#            count   = __DESTRUCTOR_COUNT__,
#            segment = RODATA;
#    CONDES: type    = interruptor,
#            label   = __INTERRUPTOR_TABLE__,
#            count   = __INTERRUPTOR_COUNT__,
#            segment = RODATA,
#            import  = __CALLIRQ__;
#}
