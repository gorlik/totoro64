SYMBOLS {
    __STACKSIZE__: type = weak, value = $0800; # 2k stack
    __HIMEM__:     type = weak, value = $8000;
}
MEMORY {
    ZP:       file = "", define = yes, start = $0002,           size = $001A;
#16k catridge data.
    ROM:	file = %O, define = yes, start = $8000, size = $4000, fill=yes;
#Usable RAM for data.
    RAM:	file = "", define = yes, start = $1C01, size = $63FF, type = rw;
}
SEGMENTS {
    ZEROPAGE: load = ZP,      type = zp;
    STARTUP:  load = ROM,     type = ro;
    LOWCODE:  load = ROM,     type = ro,  optional = yes;
    CODE:     load = ROM,     type = ro;
    RODATA:   load = ROM,     type = ro;
    DATA:     load = ROM, run = RAM, type = rw, define = yes;
    INIT:     load = ROM,     type = ro, define = yes, optional = yes;
    ONCE:     load = ROM,     type = ro,  define   = yes;
    BSS:      load = RAM,     type = bss, define   = yes;
}
FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = ONCE;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}
